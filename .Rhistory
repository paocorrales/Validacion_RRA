out <- rbind(out, obs)
}
ot
out
ot
out
i = 2
to.read <- file(files[i], 'rb')
all.data <- readBin(to.read, 'numeric', size = 4, n = file.size(files[i])/4, endian = "little")
close(to.read)
obs <- all.data[all.data != all.data[1]]
obs <- data.table::as.data.table(matrix(obs, ncol = 7, byrow = TRUE))
colnames(obs) <- c("obs.id", "lon", "lat", "elev", "obs", "error", "sub.id")
date_obs <- date[i]
obs[, time := date_obs]
if (i == 1) {
out <- obs
} else {
out <- rbind(out, obs)
}
out
read.obs <- function(filespath) {
files <- Sys.glob(filepath)
#Para archivos con obs cada 10 minutos
date <- lubridate::ymd_hm(stringi::stri_sub(basename(files), 5, 16))
for (i in 1:length(files)) {
to.read <- file(files[i], 'rb')
all.data <- readBin(to.read, 'numeric', size = 4, n = file.size(files[i])/4, endian = "little")
close(to.read)
obs <- all.data[all.data != all.data[1]]
obs <- data.table::as.data.table(matrix(obs, ncol = 7, byrow = TRUE))
colnames(obs) <- c("obs.id", "lon", "lat", "elev", "obs", "error", "sub.id")
date_obs <- date[i]
obs[, time := date_obs]
if (i == 1) {
out <- obs
} else {
out <- rbind(out, obs)
}
return(out)
}
}
read.obs <- function(filepath) {
files <- Sys.glob(filepath)
#Para archivos con obs cada 10 minutos
date <- lubridate::ymd_hm(stringi::stri_sub(basename(files), 5, 16))
for (i in 1:length(files)) {
to.read <- file(files[i], 'rb')
all.data <- readBin(to.read, 'numeric', size = 4, n = file.size(files[i])/4, endian = "little")
close(to.read)
obs <- all.data[all.data != all.data[1]]
obs <- data.table::as.data.table(matrix(obs, ncol = 7, byrow = TRUE))
colnames(obs) <- c("obs.id", "lon", "lat", "elev", "obs", "error", "sub.id")
date_obs <- date[i]
obs[, time := date_obs]
if (i == 1) {
out <- obs
} else {
out <- rbind(out, obs)
}
return(out)
}
}
obs <- read.obs
obs <- read.obs(filepath)
filepath
obs
obs
remove(obs)
read.obs()
read.obs(filepath)
read.obs(filepath)[]
read.obs <- function(filepath) {
files <- Sys.glob(filepath)
#Para archivos con obs cada 10 minutos
date <- lubridate::ymd_hm(stringi::stri_sub(basename(files), 5, 16))
for (i in 1:length(files)) {
to.read <- file(files[i], 'rb')
all.data <- readBin(to.read, 'numeric', size = 4, n = file.size(files[i])/4, endian = "little")
close(to.read)
obs <- all.data[all.data != all.data[1]]
obs <- data.table::as.data.table(matrix(obs, ncol = 7, byrow = TRUE))
colnames(obs) <- c("obs.id", "lon", "lat", "elev", "obs", "error", "sub.id")
date_obs <- date[i]
obs[, time := date_obs]
if (i == 1) {
out <- obs
} else {
out <- rbind(out, obs)
}
return(out)
}
}
read.obs(filepath)[]
read.obs <- function(filepath) {
files <- Sys.glob(filepath)
#Para archivos con obs cada 10 minutos
date <- lubridate::ymd_hm(stringi::stri_sub(basename(files), 5, 16))
for (i in 1:length(files)) {
to.read <- file(files[i], 'rb')
all.data <- readBin(to.read, 'numeric', size = 4, n = file.size(files[i])/4, endian = "little")
close(to.read)
obs <- all.data[all.data != all.data[1]]
obs <- data.table::as.data.table(matrix(obs, ncol = 7, byrow = TRUE))
colnames(obs) <- c("obs.id", "lon", "lat", "elev", "obs", "error", "sub.id")
date_obs <- date[i]
obs[, time := date_obs]
if (i == 1) {
out <- obs
} else {
print("agregando")
out <- rbind(out, obs)
}
return(out)
}
}
read.obs(filepath)[]
files <- Sys.glob(filepath)
fiels
files
read.obs <- function(filepath) {
files <- Sys.glob(filepath)
#Para archivos con obs cada 10 minutos
date <- lubridate::ymd_hm(stringi::stri_sub(basename(files), 5, 16))
print(length(files))
for (i in 1:length(files)) {
to.read <- file(files[i], 'rb')
all.data <- readBin(to.read, 'numeric', size = 4, n = file.size(files[i])/4, endian = "little")
close(to.read)
obs <- all.data[all.data != all.data[1]]
obs <- data.table::as.data.table(matrix(obs, ncol = 7, byrow = TRUE))
colnames(obs) <- c("obs.id", "lon", "lat", "elev", "obs", "error", "sub.id")
date_obs <- date[i]
obs[, time := date_obs]
if (i == 1) {
out <- obs
} else {
print("agregando")
out <- rbind(out, obs)
}
return(out)
}
}
read.obs(filepath)[]
files <- Sys.glob(filepath)
date <- lubridate::ymd_hm(stringi::stri_sub(basename(files), 5, 16))
for (i in 1:length(files)) {
to.read <- file(files[i], 'rb')
all.data <- readBin(to.read, 'numeric', size = 4, n = file.size(files[i])/4, endian = "little")
close(to.read)
obs <- all.data[all.data != all.data[1]]
obs <- data.table::as.data.table(matrix(obs, ncol = 7, byrow = TRUE))
colnames(obs) <- c("obs.id", "lon", "lat", "elev", "obs", "error", "sub.id")
date_obs <- date[i]
obs[, time := date_obs]
if (i == 1) {
out <- obs
} else {
print("agregando")
out <- rbind(out, obs)
}
return(out)
}
read.obs <- function(filepath) {
files <- Sys.glob(filepath)
#Para archivos con obs cada 10 minutos
date <- lubridate::ymd_hm(stringi::stri_sub(basename(files), 5, 16))
for (i in 1:length(files)) {
to.read <- file(files[i], 'rb')
all.data <- readBin(to.read, 'numeric', size = 4, n = file.size(files[i])/4, endian = "little")
close(to.read)
obs <- all.data[all.data != all.data[1]]
obs <- data.table::as.data.table(matrix(obs, ncol = 7, byrow = TRUE))
colnames(obs) <- c("obs.id", "lon", "lat", "elev", "obs", "error", "sub.id")
date_obs <- date[i]
obs[, time := date_obs]
print(i)
if (i == 1) {
out <- obs
} else {
print("agregando")
out <- rbind(out, obs)
}
return(out)
}
}
read.obs(filepath)[]
read.obs <- function(filepath) {
files <- Sys.glob(filepath)
#Para archivos con obs cada 10 minutos
date <- lubridate::ymd_hm(stringi::stri_sub(basename(files), 5, 16))
for (i in 1:length(files)) {
to.read <- file(files[i], 'rb')
all.data <- readBin(to.read, 'numeric', size = 4, n = file.size(files[i])/4, endian = "little")
close(to.read)
obs <- all.data[all.data != all.data[1]]
obs <- data.table::as.data.table(matrix(obs, ncol = 7, byrow = TRUE))
colnames(obs) <- c("obs.id", "lon", "lat", "elev", "obs", "error", "sub.id")
date_obs <- date[i]
obs[, time := date_obs]
print(i)
if (i == 1) {
out <- obs
} else {
print("agregando")
out <- rbind(out, obs)
}
}
return(out)
}
read.obs(filepath)[]
read.obs <- function(filepath) {
files <- Sys.glob(filepath)
#Para archivos con obs cada 10 minutos
date <- lubridate::ymd_hm(stringi::stri_sub(basename(files), 5, 16))
for (i in 1:length(files)) {
to.read <- file(files[i], 'rb')
all.data <- readBin(to.read, 'numeric', size = 4, n = file.size(files[i])/4, endian = "little")
close(to.read)
obs <- all.data[all.data != all.data[1]]
obs <- data.table::as.data.table(matrix(obs, ncol = 7, byrow = TRUE))
colnames(obs) <- c("obs.id", "lon", "lat", "elev", "obs", "error", "sub.id")
date_obs <- date[i]
obs[, time := date_obs]
print(i)
if (i == 1) {
out <- obs
} else {
out <- rbind(out, obs)
}
}
return(out)
}
obs <- read.obs(filepath)
read.obs <- function(filepath) {
files <- Sys.glob(filepath)
#Para archivos con obs cada 10 minutos
date <- lubridate::ymd_hm(stringi::stri_sub(basename(files), 5, 16))
for (i in 1:length(files)) {
to.read <- file(files[i], 'rb')
all.data <- readBin(to.read, 'numeric', size = 4, n = file.size(files[i])/4, endian = "little")
close(to.read)
obs <- all.data[all.data != all.data[1]]
obs <- data.table::as.data.table(matrix(obs, ncol = 7, byrow = TRUE))
colnames(obs) <- c("obs.id", "lon", "lat", "elev", "obs", "error", "sub.id")
date_obs <- date[i]
obs[, time := date_obs]
if (i == 1) {
out <- obs
} else {
out <- rbind(out, obs)
}
}
return(out)
}
obs <- read.obs(filepath)
unique(obs$time)
uv <- obs[obs.id %in% c(2819, 2820)]
obs[, .N, by = .(obs.id)]
uv[, .N, by = .(time)]
uv[, .N, by = .(time, sub.id)]
goeswind <- uv[sub.id == 4]
unique(goeswind$elev)
library(metR)
library(ggplot2)
library(interp)
library(patchwork)
goeswind[1:5000] %>%
.[obs.id == 2819] %>%
ggplot(aes(lon, lat)) +
geom_point(aes(obs))
library(dplyr)
goeswind[1:5000] %>%
.[obs.id == 2819] %>%
ggplot(aes(lon, lat)) +
geom_point(aes(obs))
goeswind[1:5000] %>%
.[obs.id == 2819] %>%
ggplot(aes(lon, lat)) +
geom_point(aes(obs, color = obs))
topo <- GetTopography(360-67.5, 360-55, -24, -39, 0.25)
range(topo$lon)
range(uv$lon)
range(goeswind$lon)
goeswind[1:5000] %>%
.[obs.id == 2819] %>%
ggplot(aes(lon, lat)) +
geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(obs, color = obs))
range(goeswind[1:5000]$lon)
goeswind[1:5000] %>%
.[obs.id == 2819] %>%
ggplot(aes(lon, lat)) +
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(obs, color = obs))
goeswind[1:5000] %>%
.[obs.id == 2819]
goeswind[1:5000] %>%
.[obs.id == 2819] %>%
ggplot(aes(lon, lat)) +
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(obs, color = obs))
goeswind[1:5000] %>%
.[obs.id == 2819]
str(goeswind[1:5000] %>%
.[obs.id == 2819])
goeswind[1:5000] %>%
.[obs.id == 2819] %>%
ggplot(aes(ConvertLongitude(lon), lat)) +
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(obs, color = obs))
goeswind[1:5000] %>%
.[obs.id == 2819] %>%
ggplot(aes(ConvertLongitude(lon), lat)) +
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(obs, color = obs))
goeswind[1:5000] %>%
.[obs.id == 2819] %>%
ggplot(aes(lon, lat)) +
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(obs, color = obs))
ggplot()
ggplot
goeswind[1:5000] %>%
.[obs.id == 2819] %>%
ggplot(aes(lon, lat)) +
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(obs, color = obs))
goeswind[1:5000] %>%
.[obs.id == 2819] %>%
ggplot(aes(lon, lat)) +
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = obs))
goeswind[1:5000] %>%
.[obs.id == 2819] %>%
ggplot(aes(lon, lat)) +
geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = obs))
goeswind[1:10000] %>%
.[obs.id == 2819] %>%
ggplot(aes(lon, lat)) +
geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = obs))
goeswind[1:10000] %>%
.[obs.id == 2819] %>%
ggplot(aes(lon, lat)) +
geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = elev))
obs[, .N, by = .(sub.id)]
obs[, .N, by = .(obs.id, sub.id)]
uv[, .N, by = .(obs.id, sub.id)]
airs <- uv[sub.id == 1]
airs[1:10000] %>%
.[obs.id == 2819] %>%
ggplot(aes(lon, lat)) +
geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = elev))
airs[1:10000] %>%
# .[obs.id == 2819] %>%
ggplot(aes(lon, lat)) +
geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = elev))
airs
airs[1:10000] %>%
# .[obs.id == 2819] %>%
ggplot(aes(lon, lat)) +
geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = obs))
airs[1:10000] %>%
# .[obs.id == 2819] %>%
ggplot(aes(obs, elev)) +
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = obs))
airs[1:10000] %>%
# .[obs.id == 2819] %>%
ggplot(aes(obs, elev)) +
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = lat))
airs[1:10000] %>%
# .[obs.id == 2819] %>%
ggplot(aes(obs, elev)) +
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = factor(lat)))
airs[lat < -40] %>%
# .[obs.id == 2819] %>%
ggplot(aes(obs, elev)) +
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = factor(lat)))
airs[lat < -40]
View(uv)
View(airs)
View(goeswind)
airs <- uv[sub.id == 1]
View(uv)
View(uv)
View(airs)
str(airs)
str(uv)
airs <- uv[sub.id == 1]
str(airs)
airs$time
airs$time[1]
str(airs$time[1]
airs[, hour(time)]
airs[, data.table::hour(time)]
library(data.table)
airs <- uv[sub.id == 1]
airs
str(airs)
uv[sub.id == 1, hour(time)]
uv[hour(time)]
uv[, hour(time)]
uv[, .(time, hour(time))4]
uv[, .(sub.id, hour(time))]
uv[, .(sub.id, hour(time))][sub.id == 1]
airs[, hour(time=)]
airs[, hour(time)]
ris
airs
obs
obs[36482]
obs[1]
as.POSIXct("2018-11-20 32:00:00")
as.POSIXct("2018-11-20 23:00:00")
as.POSIXct("2018-11-20 00:00:00")
as.POSIXct("2018-11-20 01:00:00")
airs[lat < -40] %>%
# .[obs.id == 2819] %>%
ggplot(aes(obs, elev)) +
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = factor(obs.id)))
range(airs$elev)
range(airs$lat)
unique(uv$sub.id)
uv[, .N, by = .(sub.id)]
uv[sub.id == 9] %>%
# .[obs.id == 2819] %>%
ggplot(aes(lon, lat)) +
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = obs))
uv[sub.id == 9]
range(uv[sub.id == 9]$elev)
uv[sub.id == 9] %>%
# .[obs.id == 2819] %>%
ggplot(aes(lon, lat)) +
geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = obs))
range(uv[sub.id == 9]$lon)
uv[sub.id == 3] %>%
# .[obs.id == 2819] %>%
ggplot(aes(lon, lat)) +
geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = obs))
bufr <- fread('../test1.csv')
View(bufr)
uv[sub.id == 3] %>%
# .[obs.id == 2819] %>%
ggplot(aes(lon, lat)) +
geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = obs))
uv[sub.id == 3] %>%
# .[obs.id == 2819] %>%
ggplot(aes(obs, elev)) +
geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = factor(obs.id)))
uv[sub.id == 3]
uv[sub.id == 3] %>%
# .[obs.id == 2819] %>%
ggplot(aes(elev, obs)) +
geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = factor(obs.id)))
uv[sub.id == 3] %>%
# .[obs.id == 2819] %>%
ggplot(aes(elev, obs)) +
geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = factor(obs.id)))
uv[sub.id == 3] %>%
# .[obs.id == 2819] %>%
ggplot(aes(elev, obs)) +
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = factor(obs.id)))
uv[sub.id == 3] %>%
# .[obs.id == 2819] %>%
ggplot(aes(obs, elev)) +
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = factor(obs.id)))
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = obs)
uv[sub.id == 3] %>%
.[obs.id == 2819] %>%
ggplot(aes(lon, elev)) +
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = obs))
range(uv$elev)
uv[sub.id == 3] %>%
.[obs.id == 2819] %>%
ggplot(aes(lon, elev)) +
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = obs)) +
scale_y_level()
uv[sub.id == 9] %>%
.[obs.id == 2819] %>%
ggplot(aes(lon, elev)) +
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = obs)) +
scale_y_level()
uv[sub.id == 1] %>%
.[obs.id == 2819] %>%
ggplot(aes(lon, elev)) +
# geom_contour(data = topo, aes(z = h), color = "darkgray") +
geom_point(aes(color = obs)) +
scale_y_level()
